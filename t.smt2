(set-logic ALL)
(push 1)
(declare-fun xInitial@0 () (_ BitVec 16))
(declare-fun yInitial@0 () (_ BitVec 16))
(declare-fun x@0 () (_ BitVec 16))
(declare-fun y@0 () (_ BitVec 16))
(declare-fun busy@0 () Bool)
(declare-fun resultValid@0 () Bool)
(define-fun _resetCount@0 () Bool false)
(declare-fun reset@0 () Bool)
(declare-fun input_valid@0 () Bool)
(declare-fun input_bits_value1@0 () (_ BitVec 16))
(declare-fun input_bits_value2@0 () (_ BitVec 16))
(declare-fun output_ready@0 () Bool)
(declare-fun _GEN_5_invalid@0 () (_ BitVec 16))
(declare-fun _GEN_6_invalid@0 () (_ BitVec 16))
(declare-fun _GEN_7_invalid@0 () (_ BitVec 16))
(declare-fun _GEN_18_invalid@0 () (_ BitVec 16))
(declare-fun _GEN_19_invalid@0 () (_ BitVec 16))
(declare-fun _GEN_20_invalid@0 () (_ BitVec 16))
(define-fun _input_ready_T@0 () Bool (not busy@0))
(define-fun _T@0 () Bool (bvugt x@0 y@0))
(define-fun _x_T@0 () (_ BitVec 17) (bvsub ((_ zero_extend 1) x@0) ((_ zero_extend 1) y@0)))
(define-fun _x_T_1@0 () (_ BitVec 16) ((_ extract 15 0) _x_T@0))
(define-fun _y_T@0 () (_ BitVec 17) (bvsub ((_ zero_extend 1) y@0) ((_ zero_extend 1) x@0)))
(define-fun _y_T_1@0 () (_ BitVec 16) ((_ extract 15 0) _y_T@0))
(define-fun _GEN_0@0 () (_ BitVec 16) (ite _T@0 _x_T_1@0 x@0))
(define-fun _GEN_1@0 () (_ BitVec 16) (ite _T@0 y@0 _y_T_1@0))
(define-fun _T_1@0 () Bool (= x@0 (_ bv0 16)))
(define-fun _T_2@0 () Bool (= y@0 (_ bv0 16)))
(define-fun _T_3@0 () Bool (or _T_1@0 _T_2@0))
(define-fun _T_4@0 () Bool (= x@0 (_ bv0 16)))
(define-fun _GEN_2@0 () (_ BitVec 16) (ite _T_1@0 y@0 x@0))
(define-fun _T_5@0 () Bool (and output_ready@0 resultValid@0))
(define-fun _GEN_3@0 () Bool (ite _T_5@0 false busy@0))
(define-fun _GEN_4@0 () Bool (ite _T_5@0 false true))
(define-fun _GEN_5_invalid.en@0 () Bool (not _T_3@0))
(define-fun _GEN_5@0 () (_ BitVec 16) (ite (not _T_3@0) _GEN_5_invalid@0 _GEN_2@0))
(define-fun _GEN_6_invalid.en@0 () Bool (not _T_3@0))
(define-fun _GEN_6@0 () (_ BitVec 16) (ite (not _T_3@0) _GEN_6_invalid@0 xInitial@0))
(define-fun _GEN_7_invalid.en@0 () Bool (not _T_3@0))
(define-fun _GEN_7@0 () (_ BitVec 16) (ite (not _T_3@0) _GEN_7_invalid@0 yInitial@0))
(define-fun _GEN_8@0 () Bool (ite _T_3@0 _GEN_4@0 resultValid@0))
(define-fun _GEN_9@0 () Bool (ite _T_3@0 _GEN_3@0 busy@0))
(define-fun _GEN_10@0 () Bool (or input_valid@0 _input_ready_T@0))
(define-fun _GEN_11@0 () (_ BitVec 16) (ite input_valid@0 input_bits_value1@0 x@0))
(define-fun _GEN_12@0 () (_ BitVec 16) (ite input_valid@0 input_bits_value2@0 y@0))
(define-fun _GEN_13@0 () (_ BitVec 16) (ite input_valid@0 input_bits_value1@0 xInitial@0))
(define-fun _GEN_14@0 () (_ BitVec 16) (ite input_valid@0 input_bits_value2@0 yInitial@0))
(define-fun _GEN_15@0 () Bool (or input_valid@0 busy@0))
(define-fun _GEN_18_invalid.en@0 () Bool (not busy@0))
(define-fun _GEN_19_invalid.en@0 () Bool (not busy@0))
(define-fun _GEN_20_invalid.en@0 () Bool (not busy@0))
(define-fun _GEN_21@0 () Bool (ite busy@0 _GEN_8@0 resultValid@0))
(define-fun _GEN_22@0 () Bool (ite busy@0 _GEN_9@0 _GEN_15@0))
(define-fun output_valid@0 () Bool resultValid@0)
(define-fun _T_8@0 () Bool (and _input_ready_T@0 output_valid@0))
(define-fun _T_9@0 () Bool (not _T_8@0))
(define-fun _T_11@0 () Bool (not reset@0))
(define-fun _T_12@0 () Bool (not _T_9@0))
(define-fun _resetPhase@0 () Bool (not (bvuge (ite _resetCount@0 (_ bv1 1) (_ bv0 1)) (ite true (_ bv1 1) (_ bv0 1)))))
(define-fun input_ready@0 () Bool (ite busy@0 _input_ready_T@0 _GEN_10@0))
(define-fun output_bits_value1@0 () (_ BitVec 16) (ite (not busy@0) _GEN_19_invalid@0 _GEN_6@0))
(define-fun output_bits_value2@0 () (_ BitVec 16) (ite (not busy@0) _GEN_20_invalid@0 _GEN_7@0))
(define-fun output_bits_gcd@0 () (_ BitVec 16) (ite (not busy@0) _GEN_18_invalid@0 _GEN_5@0))
(define-fun assert@0 () Bool (not (=> _T_11@0 _T_9@0)))
(define-fun _resetActive@0 () Bool (=> _resetPhase@0 reset@0))
(assert _resetActive@0)
(push 1)
(assert assert@0)
(check-sat)
(pop 1)
(define-fun xInitial@1 () (_ BitVec 16) (ite busy@0 xInitial@0 _GEN_13@0))
(define-fun yInitial@1 () (_ BitVec 16) (ite busy@0 yInitial@0 _GEN_14@0))
(define-fun x@1 () (_ BitVec 16) (ite busy@0 _GEN_0@0 _GEN_11@0))
(define-fun y@1 () (_ BitVec 16) (ite busy@0 _GEN_1@0 _GEN_12@0))
(define-fun busy@1 () Bool (ite reset@0 false _GEN_22@0))
(define-fun resultValid@1 () Bool (ite reset@0 false _GEN_21@0))
(define-fun _resetCount@1 () Bool (ite _resetPhase@0 (= ((_ extract 0 0) (bvadd ((_ zero_extend 1) (ite _resetCount@0 (_ bv1 1) (_ bv0 1))) (_ bv1 2))) (_ bv1 1)) _resetCount@0))
(declare-fun reset@1 () Bool)
(declare-fun input_valid@1 () Bool)
(declare-fun input_bits_value1@1 () (_ BitVec 16))
(declare-fun input_bits_value2@1 () (_ BitVec 16))
(declare-fun output_ready@1 () Bool)
(declare-fun _GEN_5_invalid@1 () (_ BitVec 16))
(declare-fun _GEN_6_invalid@1 () (_ BitVec 16))
(declare-fun _GEN_7_invalid@1 () (_ BitVec 16))
(declare-fun _GEN_18_invalid@1 () (_ BitVec 16))
(declare-fun _GEN_19_invalid@1 () (_ BitVec 16))
(declare-fun _GEN_20_invalid@1 () (_ BitVec 16))
(define-fun _input_ready_T@1 () Bool (not busy@1))
(define-fun _T@1 () Bool (bvugt x@1 y@1))
(define-fun _x_T@1 () (_ BitVec 17) (bvsub ((_ zero_extend 1) x@1) ((_ zero_extend 1) y@1)))
(define-fun _x_T_1@1 () (_ BitVec 16) ((_ extract 15 0) _x_T@1))
(define-fun _y_T@1 () (_ BitVec 17) (bvsub ((_ zero_extend 1) y@1) ((_ zero_extend 1) x@1)))
(define-fun _y_T_1@1 () (_ BitVec 16) ((_ extract 15 0) _y_T@1))
(define-fun _GEN_0@1 () (_ BitVec 16) (ite _T@1 _x_T_1@1 x@1))
(define-fun _GEN_1@1 () (_ BitVec 16) (ite _T@1 y@1 _y_T_1@1))
(define-fun _T_1@1 () Bool (= x@1 (_ bv0 16)))
(define-fun _T_2@1 () Bool (= y@1 (_ bv0 16)))
(define-fun _T_3@1 () Bool (or _T_1@1 _T_2@1))
(define-fun _T_4@1 () Bool (= x@1 (_ bv0 16)))
(define-fun _GEN_2@1 () (_ BitVec 16) (ite _T_1@1 y@1 x@1))
(define-fun _T_5@1 () Bool (and output_ready@1 resultValid@1))
(define-fun _GEN_3@1 () Bool (ite _T_5@1 false busy@1))
(define-fun _GEN_4@1 () Bool (ite _T_5@1 false true))
(define-fun _GEN_5_invalid.en@1 () Bool (not _T_3@1))
(define-fun _GEN_5@1 () (_ BitVec 16) (ite (not _T_3@1) _GEN_5_invalid@1 _GEN_2@1))
(define-fun _GEN_6_invalid.en@1 () Bool (not _T_3@1))
(define-fun _GEN_6@1 () (_ BitVec 16) (ite (not _T_3@1) _GEN_6_invalid@1 xInitial@1))
(define-fun _GEN_7_invalid.en@1 () Bool (not _T_3@1))
(define-fun _GEN_7@1 () (_ BitVec 16) (ite (not _T_3@1) _GEN_7_invalid@1 yInitial@1))
(define-fun _GEN_8@1 () Bool (ite _T_3@1 _GEN_4@1 resultValid@1))
(define-fun _GEN_9@1 () Bool (ite _T_3@1 _GEN_3@1 busy@1))
(define-fun _GEN_10@1 () Bool (or input_valid@1 _input_ready_T@1))
(define-fun _GEN_11@1 () (_ BitVec 16) (ite input_valid@1 input_bits_value1@1 x@1))
(define-fun _GEN_12@1 () (_ BitVec 16) (ite input_valid@1 input_bits_value2@1 y@1))
(define-fun _GEN_13@1 () (_ BitVec 16) (ite input_valid@1 input_bits_value1@1 xInitial@1))
(define-fun _GEN_14@1 () (_ BitVec 16) (ite input_valid@1 input_bits_value2@1 yInitial@1))
(define-fun _GEN_15@1 () Bool (or input_valid@1 busy@1))
(define-fun _GEN_18_invalid.en@1 () Bool (not busy@1))
(define-fun _GEN_19_invalid.en@1 () Bool (not busy@1))
(define-fun _GEN_20_invalid.en@1 () Bool (not busy@1))
(define-fun _GEN_21@1 () Bool (ite busy@1 _GEN_8@1 resultValid@1))
(define-fun _GEN_22@1 () Bool (ite busy@1 _GEN_9@1 _GEN_15@1))
(define-fun output_valid@1 () Bool resultValid@1)
(define-fun _T_8@1 () Bool (and _input_ready_T@1 output_valid@1))
(define-fun _T_9@1 () Bool (not _T_8@1))
(define-fun _T_11@1 () Bool (not reset@1))
(define-fun _T_12@1 () Bool (not _T_9@1))
(define-fun _resetPhase@1 () Bool (not (bvuge (ite _resetCount@1 (_ bv1 1) (_ bv0 1)) (ite true (_ bv1 1) (_ bv0 1)))))
(define-fun input_ready@1 () Bool (ite busy@1 _input_ready_T@1 _GEN_10@1))
(define-fun output_bits_value1@1 () (_ BitVec 16) (ite (not busy@1) _GEN_19_invalid@1 _GEN_6@1))
(define-fun output_bits_value2@1 () (_ BitVec 16) (ite (not busy@1) _GEN_20_invalid@1 _GEN_7@1))
(define-fun output_bits_gcd@1 () (_ BitVec 16) (ite (not busy@1) _GEN_18_invalid@1 _GEN_5@1))
(define-fun assert@1 () Bool (not (=> _T_11@1 _T_9@1)))
(define-fun _resetActive@1 () Bool (=> _resetPhase@1 reset@1))
(assert _resetActive@1)
(push 1)
(assert assert@1)
(check-sat)
(pop 1)
(define-fun xInitial@2 () (_ BitVec 16) (ite busy@1 xInitial@1 _GEN_13@1))
(define-fun yInitial@2 () (_ BitVec 16) (ite busy@1 yInitial@1 _GEN_14@1))
(define-fun x@2 () (_ BitVec 16) (ite busy@1 _GEN_0@1 _GEN_11@1))
(define-fun y@2 () (_ BitVec 16) (ite busy@1 _GEN_1@1 _GEN_12@1))
(define-fun busy@2 () Bool (ite reset@1 false _GEN_22@1))
(define-fun resultValid@2 () Bool (ite reset@1 false _GEN_21@1))
(define-fun _resetCount@2 () Bool (ite _resetPhase@1 (= ((_ extract 0 0) (bvadd ((_ zero_extend 1) (ite _resetCount@1 (_ bv1 1) (_ bv0 1))) (_ bv1 2))) (_ bv1 1)) _resetCount@1))
(declare-fun reset@2 () Bool)
(declare-fun input_valid@2 () Bool)
(declare-fun input_bits_value1@2 () (_ BitVec 16))
(declare-fun input_bits_value2@2 () (_ BitVec 16))
(declare-fun output_ready@2 () Bool)
(declare-fun _GEN_5_invalid@2 () (_ BitVec 16))
(declare-fun _GEN_6_invalid@2 () (_ BitVec 16))
(declare-fun _GEN_7_invalid@2 () (_ BitVec 16))
(declare-fun _GEN_18_invalid@2 () (_ BitVec 16))
(declare-fun _GEN_19_invalid@2 () (_ BitVec 16))
(declare-fun _GEN_20_invalid@2 () (_ BitVec 16))
(define-fun _input_ready_T@2 () Bool (not busy@2))
(define-fun _T@2 () Bool (bvugt x@2 y@2))
(define-fun _x_T@2 () (_ BitVec 17) (bvsub ((_ zero_extend 1) x@2) ((_ zero_extend 1) y@2)))
(define-fun _x_T_1@2 () (_ BitVec 16) ((_ extract 15 0) _x_T@2))
(define-fun _y_T@2 () (_ BitVec 17) (bvsub ((_ zero_extend 1) y@2) ((_ zero_extend 1) x@2)))
(define-fun _y_T_1@2 () (_ BitVec 16) ((_ extract 15 0) _y_T@2))
(define-fun _GEN_0@2 () (_ BitVec 16) (ite _T@2 _x_T_1@2 x@2))
(define-fun _GEN_1@2 () (_ BitVec 16) (ite _T@2 y@2 _y_T_1@2))
(define-fun _T_1@2 () Bool (= x@2 (_ bv0 16)))
(define-fun _T_2@2 () Bool (= y@2 (_ bv0 16)))
(define-fun _T_3@2 () Bool (or _T_1@2 _T_2@2))
(define-fun _T_4@2 () Bool (= x@2 (_ bv0 16)))
(define-fun _GEN_2@2 () (_ BitVec 16) (ite _T_1@2 y@2 x@2))
(define-fun _T_5@2 () Bool (and output_ready@2 resultValid@2))
(define-fun _GEN_3@2 () Bool (ite _T_5@2 false busy@2))
(define-fun _GEN_4@2 () Bool (ite _T_5@2 false true))
(define-fun _GEN_5_invalid.en@2 () Bool (not _T_3@2))
(define-fun _GEN_5@2 () (_ BitVec 16) (ite (not _T_3@2) _GEN_5_invalid@2 _GEN_2@2))
(define-fun _GEN_6_invalid.en@2 () Bool (not _T_3@2))
(define-fun _GEN_6@2 () (_ BitVec 16) (ite (not _T_3@2) _GEN_6_invalid@2 xInitial@2))
(define-fun _GEN_7_invalid.en@2 () Bool (not _T_3@2))
(define-fun _GEN_7@2 () (_ BitVec 16) (ite (not _T_3@2) _GEN_7_invalid@2 yInitial@2))
(define-fun _GEN_8@2 () Bool (ite _T_3@2 _GEN_4@2 resultValid@2))
(define-fun _GEN_9@2 () Bool (ite _T_3@2 _GEN_3@2 busy@2))
(define-fun _GEN_10@2 () Bool (or input_valid@2 _input_ready_T@2))
(define-fun _GEN_11@2 () (_ BitVec 16) (ite input_valid@2 input_bits_value1@2 x@2))
(define-fun _GEN_12@2 () (_ BitVec 16) (ite input_valid@2 input_bits_value2@2 y@2))
(define-fun _GEN_13@2 () (_ BitVec 16) (ite input_valid@2 input_bits_value1@2 xInitial@2))
(define-fun _GEN_14@2 () (_ BitVec 16) (ite input_valid@2 input_bits_value2@2 yInitial@2))
(define-fun _GEN_15@2 () Bool (or input_valid@2 busy@2))
(define-fun _GEN_18_invalid.en@2 () Bool (not busy@2))
(define-fun _GEN_19_invalid.en@2 () Bool (not busy@2))
(define-fun _GEN_20_invalid.en@2 () Bool (not busy@2))
(define-fun _GEN_21@2 () Bool (ite busy@2 _GEN_8@2 resultValid@2))
(define-fun _GEN_22@2 () Bool (ite busy@2 _GEN_9@2 _GEN_15@2))
(define-fun output_valid@2 () Bool resultValid@2)
(define-fun _T_8@2 () Bool (and _input_ready_T@2 output_valid@2))
(define-fun _T_9@2 () Bool (not _T_8@2))
(define-fun _T_11@2 () Bool (not reset@2))
(define-fun _T_12@2 () Bool (not _T_9@2))
(define-fun _resetPhase@2 () Bool (not (bvuge (ite _resetCount@2 (_ bv1 1) (_ bv0 1)) (ite true (_ bv1 1) (_ bv0 1)))))
(define-fun input_ready@2 () Bool (ite busy@2 _input_ready_T@2 _GEN_10@2))
(define-fun output_bits_value1@2 () (_ BitVec 16) (ite (not busy@2) _GEN_19_invalid@2 _GEN_6@2))
(define-fun output_bits_value2@2 () (_ BitVec 16) (ite (not busy@2) _GEN_20_invalid@2 _GEN_7@2))
(define-fun output_bits_gcd@2 () (_ BitVec 16) (ite (not busy@2) _GEN_18_invalid@2 _GEN_5@2))
(define-fun assert@2 () Bool (not (=> _T_11@2 _T_9@2)))
(define-fun _resetActive@2 () Bool (=> _resetPhase@2 reset@2))
(assert _resetActive@2)
(push 1)
(assert assert@2)
(check-sat)
(pop 1)
(define-fun xInitial@3 () (_ BitVec 16) (ite busy@2 xInitial@2 _GEN_13@2))
(define-fun yInitial@3 () (_ BitVec 16) (ite busy@2 yInitial@2 _GEN_14@2))
(define-fun x@3 () (_ BitVec 16) (ite busy@2 _GEN_0@2 _GEN_11@2))
(define-fun y@3 () (_ BitVec 16) (ite busy@2 _GEN_1@2 _GEN_12@2))
(define-fun busy@3 () Bool (ite reset@2 false _GEN_22@2))
(define-fun resultValid@3 () Bool (ite reset@2 false _GEN_21@2))
(define-fun _resetCount@3 () Bool (ite _resetPhase@2 (= ((_ extract 0 0) (bvadd ((_ zero_extend 1) (ite _resetCount@2 (_ bv1 1) (_ bv0 1))) (_ bv1 2))) (_ bv1 1)) _resetCount@2))
(declare-fun reset@3 () Bool)
(declare-fun input_valid@3 () Bool)
(declare-fun input_bits_value1@3 () (_ BitVec 16))
(declare-fun input_bits_value2@3 () (_ BitVec 16))
(declare-fun output_ready@3 () Bool)
(declare-fun _GEN_5_invalid@3 () (_ BitVec 16))
(declare-fun _GEN_6_invalid@3 () (_ BitVec 16))
(declare-fun _GEN_7_invalid@3 () (_ BitVec 16))
(declare-fun _GEN_18_invalid@3 () (_ BitVec 16))
(declare-fun _GEN_19_invalid@3 () (_ BitVec 16))
(declare-fun _GEN_20_invalid@3 () (_ BitVec 16))
(define-fun _input_ready_T@3 () Bool (not busy@3))
(define-fun _T@3 () Bool (bvugt x@3 y@3))
(define-fun _x_T@3 () (_ BitVec 17) (bvsub ((_ zero_extend 1) x@3) ((_ zero_extend 1) y@3)))
(define-fun _x_T_1@3 () (_ BitVec 16) ((_ extract 15 0) _x_T@3))
(define-fun _y_T@3 () (_ BitVec 17) (bvsub ((_ zero_extend 1) y@3) ((_ zero_extend 1) x@3)))
(define-fun _y_T_1@3 () (_ BitVec 16) ((_ extract 15 0) _y_T@3))
(define-fun _GEN_0@3 () (_ BitVec 16) (ite _T@3 _x_T_1@3 x@3))
(define-fun _GEN_1@3 () (_ BitVec 16) (ite _T@3 y@3 _y_T_1@3))
(define-fun _T_1@3 () Bool (= x@3 (_ bv0 16)))
(define-fun _T_2@3 () Bool (= y@3 (_ bv0 16)))
(define-fun _T_3@3 () Bool (or _T_1@3 _T_2@3))
(define-fun _T_4@3 () Bool (= x@3 (_ bv0 16)))
(define-fun _GEN_2@3 () (_ BitVec 16) (ite _T_1@3 y@3 x@3))
(define-fun _T_5@3 () Bool (and output_ready@3 resultValid@3))
(define-fun _GEN_3@3 () Bool (ite _T_5@3 false busy@3))
(define-fun _GEN_4@3 () Bool (ite _T_5@3 false true))
(define-fun _GEN_5_invalid.en@3 () Bool (not _T_3@3))
(define-fun _GEN_5@3 () (_ BitVec 16) (ite (not _T_3@3) _GEN_5_invalid@3 _GEN_2@3))
(define-fun _GEN_6_invalid.en@3 () Bool (not _T_3@3))
(define-fun _GEN_6@3 () (_ BitVec 16) (ite (not _T_3@3) _GEN_6_invalid@3 xInitial@3))
(define-fun _GEN_7_invalid.en@3 () Bool (not _T_3@3))
(define-fun _GEN_7@3 () (_ BitVec 16) (ite (not _T_3@3) _GEN_7_invalid@3 yInitial@3))
(define-fun _GEN_8@3 () Bool (ite _T_3@3 _GEN_4@3 resultValid@3))
(define-fun _GEN_9@3 () Bool (ite _T_3@3 _GEN_3@3 busy@3))
(define-fun _GEN_10@3 () Bool (or input_valid@3 _input_ready_T@3))
(define-fun _GEN_11@3 () (_ BitVec 16) (ite input_valid@3 input_bits_value1@3 x@3))
(define-fun _GEN_12@3 () (_ BitVec 16) (ite input_valid@3 input_bits_value2@3 y@3))
(define-fun _GEN_13@3 () (_ BitVec 16) (ite input_valid@3 input_bits_value1@3 xInitial@3))
(define-fun _GEN_14@3 () (_ BitVec 16) (ite input_valid@3 input_bits_value2@3 yInitial@3))
(define-fun _GEN_15@3 () Bool (or input_valid@3 busy@3))
(define-fun _GEN_18_invalid.en@3 () Bool (not busy@3))
(define-fun _GEN_19_invalid.en@3 () Bool (not busy@3))
(define-fun _GEN_20_invalid.en@3 () Bool (not busy@3))
(define-fun _GEN_21@3 () Bool (ite busy@3 _GEN_8@3 resultValid@3))
(define-fun _GEN_22@3 () Bool (ite busy@3 _GEN_9@3 _GEN_15@3))
(define-fun output_valid@3 () Bool resultValid@3)
(define-fun _T_8@3 () Bool (and _input_ready_T@3 output_valid@3))
(define-fun _T_9@3 () Bool (not _T_8@3))
(define-fun _T_11@3 () Bool (not reset@3))
(define-fun _T_12@3 () Bool (not _T_9@3))
(define-fun _resetPhase@3 () Bool (not (bvuge (ite _resetCount@3 (_ bv1 1) (_ bv0 1)) (ite true (_ bv1 1) (_ bv0 1)))))
(define-fun input_ready@3 () Bool (ite busy@3 _input_ready_T@3 _GEN_10@3))
(define-fun output_bits_value1@3 () (_ BitVec 16) (ite (not busy@3) _GEN_19_invalid@3 _GEN_6@3))
(define-fun output_bits_value2@3 () (_ BitVec 16) (ite (not busy@3) _GEN_20_invalid@3 _GEN_7@3))
(define-fun output_bits_gcd@3 () (_ BitVec 16) (ite (not busy@3) _GEN_18_invalid@3 _GEN_5@3))
(define-fun assert@3 () Bool (not (=> _T_11@3 _T_9@3)))
(define-fun _resetActive@3 () Bool (=> _resetPhase@3 reset@3))
(assert _resetActive@3)
(push 1)
(assert assert@3)
(check-sat)
(pop 1)
(define-fun xInitial@4 () (_ BitVec 16) (ite busy@3 xInitial@3 _GEN_13@3))
(define-fun yInitial@4 () (_ BitVec 16) (ite busy@3 yInitial@3 _GEN_14@3))
(define-fun x@4 () (_ BitVec 16) (ite busy@3 _GEN_0@3 _GEN_11@3))
(define-fun y@4 () (_ BitVec 16) (ite busy@3 _GEN_1@3 _GEN_12@3))
(define-fun busy@4 () Bool (ite reset@3 false _GEN_22@3))
(define-fun resultValid@4 () Bool (ite reset@3 false _GEN_21@3))
(define-fun _resetCount@4 () Bool (ite _resetPhase@3 (= ((_ extract 0 0) (bvadd ((_ zero_extend 1) (ite _resetCount@3 (_ bv1 1) (_ bv0 1))) (_ bv1 2))) (_ bv1 1)) _resetCount@3))
(declare-fun reset@4 () Bool)
(declare-fun input_valid@4 () Bool)
(declare-fun input_bits_value1@4 () (_ BitVec 16))
(declare-fun input_bits_value2@4 () (_ BitVec 16))
(declare-fun output_ready@4 () Bool)
(declare-fun _GEN_5_invalid@4 () (_ BitVec 16))
(declare-fun _GEN_6_invalid@4 () (_ BitVec 16))
(declare-fun _GEN_7_invalid@4 () (_ BitVec 16))
(declare-fun _GEN_18_invalid@4 () (_ BitVec 16))
(declare-fun _GEN_19_invalid@4 () (_ BitVec 16))
(declare-fun _GEN_20_invalid@4 () (_ BitVec 16))
(define-fun _input_ready_T@4 () Bool (not busy@4))
(define-fun _T@4 () Bool (bvugt x@4 y@4))
(define-fun _x_T@4 () (_ BitVec 17) (bvsub ((_ zero_extend 1) x@4) ((_ zero_extend 1) y@4)))
(define-fun _x_T_1@4 () (_ BitVec 16) ((_ extract 15 0) _x_T@4))
(define-fun _y_T@4 () (_ BitVec 17) (bvsub ((_ zero_extend 1) y@4) ((_ zero_extend 1) x@4)))
(define-fun _y_T_1@4 () (_ BitVec 16) ((_ extract 15 0) _y_T@4))
(define-fun _GEN_0@4 () (_ BitVec 16) (ite _T@4 _x_T_1@4 x@4))
(define-fun _GEN_1@4 () (_ BitVec 16) (ite _T@4 y@4 _y_T_1@4))
(define-fun _T_1@4 () Bool (= x@4 (_ bv0 16)))
(define-fun _T_2@4 () Bool (= y@4 (_ bv0 16)))
(define-fun _T_3@4 () Bool (or _T_1@4 _T_2@4))
(define-fun _T_4@4 () Bool (= x@4 (_ bv0 16)))
(define-fun _GEN_2@4 () (_ BitVec 16) (ite _T_1@4 y@4 x@4))
(define-fun _T_5@4 () Bool (and output_ready@4 resultValid@4))
(define-fun _GEN_3@4 () Bool (ite _T_5@4 false busy@4))
(define-fun _GEN_4@4 () Bool (ite _T_5@4 false true))
(define-fun _GEN_5_invalid.en@4 () Bool (not _T_3@4))
(define-fun _GEN_5@4 () (_ BitVec 16) (ite (not _T_3@4) _GEN_5_invalid@4 _GEN_2@4))
(define-fun _GEN_6_invalid.en@4 () Bool (not _T_3@4))
(define-fun _GEN_6@4 () (_ BitVec 16) (ite (not _T_3@4) _GEN_6_invalid@4 xInitial@4))
(define-fun _GEN_7_invalid.en@4 () Bool (not _T_3@4))
(define-fun _GEN_7@4 () (_ BitVec 16) (ite (not _T_3@4) _GEN_7_invalid@4 yInitial@4))
(define-fun _GEN_8@4 () Bool (ite _T_3@4 _GEN_4@4 resultValid@4))
(define-fun _GEN_9@4 () Bool (ite _T_3@4 _GEN_3@4 busy@4))
(define-fun _GEN_10@4 () Bool (or input_valid@4 _input_ready_T@4))
(define-fun _GEN_11@4 () (_ BitVec 16) (ite input_valid@4 input_bits_value1@4 x@4))
(define-fun _GEN_12@4 () (_ BitVec 16) (ite input_valid@4 input_bits_value2@4 y@4))
(define-fun _GEN_13@4 () (_ BitVec 16) (ite input_valid@4 input_bits_value1@4 xInitial@4))
(define-fun _GEN_14@4 () (_ BitVec 16) (ite input_valid@4 input_bits_value2@4 yInitial@4))
(define-fun _GEN_15@4 () Bool (or input_valid@4 busy@4))
(define-fun _GEN_18_invalid.en@4 () Bool (not busy@4))
(define-fun _GEN_19_invalid.en@4 () Bool (not busy@4))
(define-fun _GEN_20_invalid.en@4 () Bool (not busy@4))
(define-fun _GEN_21@4 () Bool (ite busy@4 _GEN_8@4 resultValid@4))
(define-fun _GEN_22@4 () Bool (ite busy@4 _GEN_9@4 _GEN_15@4))
(define-fun output_valid@4 () Bool resultValid@4)
(define-fun _T_8@4 () Bool (and _input_ready_T@4 output_valid@4))
(define-fun _T_9@4 () Bool (not _T_8@4))
(define-fun _T_11@4 () Bool (not reset@4))
(define-fun _T_12@4 () Bool (not _T_9@4))
(define-fun _resetPhase@4 () Bool (not (bvuge (ite _resetCount@4 (_ bv1 1) (_ bv0 1)) (ite true (_ bv1 1) (_ bv0 1)))))
(define-fun input_ready@4 () Bool (ite busy@4 _input_ready_T@4 _GEN_10@4))
(define-fun output_bits_value1@4 () (_ BitVec 16) (ite (not busy@4) _GEN_19_invalid@4 _GEN_6@4))
(define-fun output_bits_value2@4 () (_ BitVec 16) (ite (not busy@4) _GEN_20_invalid@4 _GEN_7@4))
(define-fun output_bits_gcd@4 () (_ BitVec 16) (ite (not busy@4) _GEN_18_invalid@4 _GEN_5@4))
(define-fun assert@4 () Bool (not (=> _T_11@4 _T_9@4)))
(define-fun _resetActive@4 () Bool (=> _resetPhase@4 reset@4))
(assert _resetActive@4)
(push 1)
(assert assert@4)
(check-sat)
(pop 1)
(define-fun xInitial@5 () (_ BitVec 16) (ite busy@4 xInitial@4 _GEN_13@4))
(define-fun yInitial@5 () (_ BitVec 16) (ite busy@4 yInitial@4 _GEN_14@4))
(define-fun x@5 () (_ BitVec 16) (ite busy@4 _GEN_0@4 _GEN_11@4))
(define-fun y@5 () (_ BitVec 16) (ite busy@4 _GEN_1@4 _GEN_12@4))
(define-fun busy@5 () Bool (ite reset@4 false _GEN_22@4))
(define-fun resultValid@5 () Bool (ite reset@4 false _GEN_21@4))
(define-fun _resetCount@5 () Bool (ite _resetPhase@4 (= ((_ extract 0 0) (bvadd ((_ zero_extend 1) (ite _resetCount@4 (_ bv1 1) (_ bv0 1))) (_ bv1 2))) (_ bv1 1)) _resetCount@4))
(declare-fun reset@5 () Bool)
(declare-fun input_valid@5 () Bool)
(declare-fun input_bits_value1@5 () (_ BitVec 16))
(declare-fun input_bits_value2@5 () (_ BitVec 16))
(declare-fun output_ready@5 () Bool)
(declare-fun _GEN_5_invalid@5 () (_ BitVec 16))
(declare-fun _GEN_6_invalid@5 () (_ BitVec 16))
(declare-fun _GEN_7_invalid@5 () (_ BitVec 16))
(declare-fun _GEN_18_invalid@5 () (_ BitVec 16))
(declare-fun _GEN_19_invalid@5 () (_ BitVec 16))
(declare-fun _GEN_20_invalid@5 () (_ BitVec 16))
(define-fun _input_ready_T@5 () Bool (not busy@5))
(define-fun _T@5 () Bool (bvugt x@5 y@5))
(define-fun _x_T@5 () (_ BitVec 17) (bvsub ((_ zero_extend 1) x@5) ((_ zero_extend 1) y@5)))
(define-fun _x_T_1@5 () (_ BitVec 16) ((_ extract 15 0) _x_T@5))
(define-fun _y_T@5 () (_ BitVec 17) (bvsub ((_ zero_extend 1) y@5) ((_ zero_extend 1) x@5)))
(define-fun _y_T_1@5 () (_ BitVec 16) ((_ extract 15 0) _y_T@5))
(define-fun _GEN_0@5 () (_ BitVec 16) (ite _T@5 _x_T_1@5 x@5))
(define-fun _GEN_1@5 () (_ BitVec 16) (ite _T@5 y@5 _y_T_1@5))
(define-fun _T_1@5 () Bool (= x@5 (_ bv0 16)))
(define-fun _T_2@5 () Bool (= y@5 (_ bv0 16)))
(define-fun _T_3@5 () Bool (or _T_1@5 _T_2@5))
(define-fun _T_4@5 () Bool (= x@5 (_ bv0 16)))
(define-fun _GEN_2@5 () (_ BitVec 16) (ite _T_1@5 y@5 x@5))
(define-fun _T_5@5 () Bool (and output_ready@5 resultValid@5))
(define-fun _GEN_3@5 () Bool (ite _T_5@5 false busy@5))
(define-fun _GEN_4@5 () Bool (ite _T_5@5 false true))
(define-fun _GEN_5_invalid.en@5 () Bool (not _T_3@5))
(define-fun _GEN_5@5 () (_ BitVec 16) (ite (not _T_3@5) _GEN_5_invalid@5 _GEN_2@5))
(define-fun _GEN_6_invalid.en@5 () Bool (not _T_3@5))
(define-fun _GEN_6@5 () (_ BitVec 16) (ite (not _T_3@5) _GEN_6_invalid@5 xInitial@5))
(define-fun _GEN_7_invalid.en@5 () Bool (not _T_3@5))
(define-fun _GEN_7@5 () (_ BitVec 16) (ite (not _T_3@5) _GEN_7_invalid@5 yInitial@5))
(define-fun _GEN_8@5 () Bool (ite _T_3@5 _GEN_4@5 resultValid@5))
(define-fun _GEN_9@5 () Bool (ite _T_3@5 _GEN_3@5 busy@5))
(define-fun _GEN_10@5 () Bool (or input_valid@5 _input_ready_T@5))
(define-fun _GEN_11@5 () (_ BitVec 16) (ite input_valid@5 input_bits_value1@5 x@5))
(define-fun _GEN_12@5 () (_ BitVec 16) (ite input_valid@5 input_bits_value2@5 y@5))
(define-fun _GEN_13@5 () (_ BitVec 16) (ite input_valid@5 input_bits_value1@5 xInitial@5))
(define-fun _GEN_14@5 () (_ BitVec 16) (ite input_valid@5 input_bits_value2@5 yInitial@5))
(define-fun _GEN_15@5 () Bool (or input_valid@5 busy@5))
(define-fun _GEN_18_invalid.en@5 () Bool (not busy@5))
(define-fun _GEN_19_invalid.en@5 () Bool (not busy@5))
(define-fun _GEN_20_invalid.en@5 () Bool (not busy@5))
(define-fun _GEN_21@5 () Bool (ite busy@5 _GEN_8@5 resultValid@5))
(define-fun _GEN_22@5 () Bool (ite busy@5 _GEN_9@5 _GEN_15@5))
(define-fun output_valid@5 () Bool resultValid@5)
(define-fun _T_8@5 () Bool (and _input_ready_T@5 output_valid@5))
(define-fun _T_9@5 () Bool (not _T_8@5))
(define-fun _T_11@5 () Bool (not reset@5))
(define-fun _T_12@5 () Bool (not _T_9@5))
(define-fun _resetPhase@5 () Bool (not (bvuge (ite _resetCount@5 (_ bv1 1) (_ bv0 1)) (ite true (_ bv1 1) (_ bv0 1)))))
(define-fun input_ready@5 () Bool (ite busy@5 _input_ready_T@5 _GEN_10@5))
(define-fun output_bits_value1@5 () (_ BitVec 16) (ite (not busy@5) _GEN_19_invalid@5 _GEN_6@5))
(define-fun output_bits_value2@5 () (_ BitVec 16) (ite (not busy@5) _GEN_20_invalid@5 _GEN_7@5))
(define-fun output_bits_gcd@5 () (_ BitVec 16) (ite (not busy@5) _GEN_18_invalid@5 _GEN_5@5))
(define-fun assert@5 () Bool (not (=> _T_11@5 _T_9@5)))
(define-fun _resetActive@5 () Bool (=> _resetPhase@5 reset@5))
(assert _resetActive@5)
(push 1)
(assert assert@5)
(check-sat)
(pop 1)
(define-fun xInitial@6 () (_ BitVec 16) (ite busy@5 xInitial@5 _GEN_13@5))
(define-fun yInitial@6 () (_ BitVec 16) (ite busy@5 yInitial@5 _GEN_14@5))
(define-fun x@6 () (_ BitVec 16) (ite busy@5 _GEN_0@5 _GEN_11@5))
(define-fun y@6 () (_ BitVec 16) (ite busy@5 _GEN_1@5 _GEN_12@5))
(define-fun busy@6 () Bool (ite reset@5 false _GEN_22@5))
(define-fun resultValid@6 () Bool (ite reset@5 false _GEN_21@5))
(define-fun _resetCount@6 () Bool (ite _resetPhase@5 (= ((_ extract 0 0) (bvadd ((_ zero_extend 1) (ite _resetCount@5 (_ bv1 1) (_ bv0 1))) (_ bv1 2))) (_ bv1 1)) _resetCount@5))
(declare-fun reset@6 () Bool)
(declare-fun input_valid@6 () Bool)
(declare-fun input_bits_value1@6 () (_ BitVec 16))
(declare-fun input_bits_value2@6 () (_ BitVec 16))
(declare-fun output_ready@6 () Bool)
(declare-fun _GEN_5_invalid@6 () (_ BitVec 16))
(declare-fun _GEN_6_invalid@6 () (_ BitVec 16))
(declare-fun _GEN_7_invalid@6 () (_ BitVec 16))
(declare-fun _GEN_18_invalid@6 () (_ BitVec 16))
(declare-fun _GEN_19_invalid@6 () (_ BitVec 16))
(declare-fun _GEN_20_invalid@6 () (_ BitVec 16))
(define-fun _input_ready_T@6 () Bool (not busy@6))
(define-fun _T@6 () Bool (bvugt x@6 y@6))
(define-fun _x_T@6 () (_ BitVec 17) (bvsub ((_ zero_extend 1) x@6) ((_ zero_extend 1) y@6)))
(define-fun _x_T_1@6 () (_ BitVec 16) ((_ extract 15 0) _x_T@6))
(define-fun _y_T@6 () (_ BitVec 17) (bvsub ((_ zero_extend 1) y@6) ((_ zero_extend 1) x@6)))
(define-fun _y_T_1@6 () (_ BitVec 16) ((_ extract 15 0) _y_T@6))
(define-fun _GEN_0@6 () (_ BitVec 16) (ite _T@6 _x_T_1@6 x@6))
(define-fun _GEN_1@6 () (_ BitVec 16) (ite _T@6 y@6 _y_T_1@6))
(define-fun _T_1@6 () Bool (= x@6 (_ bv0 16)))
(define-fun _T_2@6 () Bool (= y@6 (_ bv0 16)))
(define-fun _T_3@6 () Bool (or _T_1@6 _T_2@6))
(define-fun _T_4@6 () Bool (= x@6 (_ bv0 16)))
(define-fun _GEN_2@6 () (_ BitVec 16) (ite _T_1@6 y@6 x@6))
(define-fun _T_5@6 () Bool (and output_ready@6 resultValid@6))
(define-fun _GEN_3@6 () Bool (ite _T_5@6 false busy@6))
(define-fun _GEN_4@6 () Bool (ite _T_5@6 false true))
(define-fun _GEN_5_invalid.en@6 () Bool (not _T_3@6))
(define-fun _GEN_5@6 () (_ BitVec 16) (ite (not _T_3@6) _GEN_5_invalid@6 _GEN_2@6))
(define-fun _GEN_6_invalid.en@6 () Bool (not _T_3@6))
(define-fun _GEN_6@6 () (_ BitVec 16) (ite (not _T_3@6) _GEN_6_invalid@6 xInitial@6))
(define-fun _GEN_7_invalid.en@6 () Bool (not _T_3@6))
(define-fun _GEN_7@6 () (_ BitVec 16) (ite (not _T_3@6) _GEN_7_invalid@6 yInitial@6))
(define-fun _GEN_8@6 () Bool (ite _T_3@6 _GEN_4@6 resultValid@6))
(define-fun _GEN_9@6 () Bool (ite _T_3@6 _GEN_3@6 busy@6))
(define-fun _GEN_10@6 () Bool (or input_valid@6 _input_ready_T@6))
(define-fun _GEN_11@6 () (_ BitVec 16) (ite input_valid@6 input_bits_value1@6 x@6))
(define-fun _GEN_12@6 () (_ BitVec 16) (ite input_valid@6 input_bits_value2@6 y@6))
(define-fun _GEN_13@6 () (_ BitVec 16) (ite input_valid@6 input_bits_value1@6 xInitial@6))
(define-fun _GEN_14@6 () (_ BitVec 16) (ite input_valid@6 input_bits_value2@6 yInitial@6))
(define-fun _GEN_15@6 () Bool (or input_valid@6 busy@6))
(define-fun _GEN_18_invalid.en@6 () Bool (not busy@6))
(define-fun _GEN_19_invalid.en@6 () Bool (not busy@6))
(define-fun _GEN_20_invalid.en@6 () Bool (not busy@6))
(define-fun _GEN_21@6 () Bool (ite busy@6 _GEN_8@6 resultValid@6))
(define-fun _GEN_22@6 () Bool (ite busy@6 _GEN_9@6 _GEN_15@6))
(define-fun output_valid@6 () Bool resultValid@6)
(define-fun _T_8@6 () Bool (and _input_ready_T@6 output_valid@6))
(define-fun _T_9@6 () Bool (not _T_8@6))
(define-fun _T_11@6 () Bool (not reset@6))
(define-fun _T_12@6 () Bool (not _T_9@6))
(define-fun _resetPhase@6 () Bool (not (bvuge (ite _resetCount@6 (_ bv1 1) (_ bv0 1)) (ite true (_ bv1 1) (_ bv0 1)))))
(define-fun input_ready@6 () Bool (ite busy@6 _input_ready_T@6 _GEN_10@6))
(define-fun output_bits_value1@6 () (_ BitVec 16) (ite (not busy@6) _GEN_19_invalid@6 _GEN_6@6))
(define-fun output_bits_value2@6 () (_ BitVec 16) (ite (not busy@6) _GEN_20_invalid@6 _GEN_7@6))
(define-fun output_bits_gcd@6 () (_ BitVec 16) (ite (not busy@6) _GEN_18_invalid@6 _GEN_5@6))
(define-fun assert@6 () Bool (not (=> _T_11@6 _T_9@6)))
(define-fun _resetActive@6 () Bool (=> _resetPhase@6 reset@6))
(assert _resetActive@6)
(push 1)
(assert assert@6)
(check-sat)
(pop 1)
(define-fun xInitial@7 () (_ BitVec 16) (ite busy@6 xInitial@6 _GEN_13@6))
(define-fun yInitial@7 () (_ BitVec 16) (ite busy@6 yInitial@6 _GEN_14@6))
(define-fun x@7 () (_ BitVec 16) (ite busy@6 _GEN_0@6 _GEN_11@6))
(define-fun y@7 () (_ BitVec 16) (ite busy@6 _GEN_1@6 _GEN_12@6))
(define-fun busy@7 () Bool (ite reset@6 false _GEN_22@6))
(define-fun resultValid@7 () Bool (ite reset@6 false _GEN_21@6))
(define-fun _resetCount@7 () Bool (ite _resetPhase@6 (= ((_ extract 0 0) (bvadd ((_ zero_extend 1) (ite _resetCount@6 (_ bv1 1) (_ bv0 1))) (_ bv1 2))) (_ bv1 1)) _resetCount@6))
(declare-fun reset@7 () Bool)
(declare-fun input_valid@7 () Bool)
(declare-fun input_bits_value1@7 () (_ BitVec 16))
(declare-fun input_bits_value2@7 () (_ BitVec 16))
(declare-fun output_ready@7 () Bool)
(declare-fun _GEN_5_invalid@7 () (_ BitVec 16))
(declare-fun _GEN_6_invalid@7 () (_ BitVec 16))
(declare-fun _GEN_7_invalid@7 () (_ BitVec 16))
(declare-fun _GEN_18_invalid@7 () (_ BitVec 16))
(declare-fun _GEN_19_invalid@7 () (_ BitVec 16))
(declare-fun _GEN_20_invalid@7 () (_ BitVec 16))
(define-fun _input_ready_T@7 () Bool (not busy@7))
(define-fun _T@7 () Bool (bvugt x@7 y@7))
(define-fun _x_T@7 () (_ BitVec 17) (bvsub ((_ zero_extend 1) x@7) ((_ zero_extend 1) y@7)))
(define-fun _x_T_1@7 () (_ BitVec 16) ((_ extract 15 0) _x_T@7))
(define-fun _y_T@7 () (_ BitVec 17) (bvsub ((_ zero_extend 1) y@7) ((_ zero_extend 1) x@7)))
(define-fun _y_T_1@7 () (_ BitVec 16) ((_ extract 15 0) _y_T@7))
(define-fun _GEN_0@7 () (_ BitVec 16) (ite _T@7 _x_T_1@7 x@7))
(define-fun _GEN_1@7 () (_ BitVec 16) (ite _T@7 y@7 _y_T_1@7))
(define-fun _T_1@7 () Bool (= x@7 (_ bv0 16)))
(define-fun _T_2@7 () Bool (= y@7 (_ bv0 16)))
(define-fun _T_3@7 () Bool (or _T_1@7 _T_2@7))
(define-fun _T_4@7 () Bool (= x@7 (_ bv0 16)))
(define-fun _GEN_2@7 () (_ BitVec 16) (ite _T_1@7 y@7 x@7))
(define-fun _T_5@7 () Bool (and output_ready@7 resultValid@7))
(define-fun _GEN_3@7 () Bool (ite _T_5@7 false busy@7))
(define-fun _GEN_4@7 () Bool (ite _T_5@7 false true))
(define-fun _GEN_5_invalid.en@7 () Bool (not _T_3@7))
(define-fun _GEN_5@7 () (_ BitVec 16) (ite (not _T_3@7) _GEN_5_invalid@7 _GEN_2@7))
(define-fun _GEN_6_invalid.en@7 () Bool (not _T_3@7))
(define-fun _GEN_6@7 () (_ BitVec 16) (ite (not _T_3@7) _GEN_6_invalid@7 xInitial@7))
(define-fun _GEN_7_invalid.en@7 () Bool (not _T_3@7))
(define-fun _GEN_7@7 () (_ BitVec 16) (ite (not _T_3@7) _GEN_7_invalid@7 yInitial@7))
(define-fun _GEN_8@7 () Bool (ite _T_3@7 _GEN_4@7 resultValid@7))
(define-fun _GEN_9@7 () Bool (ite _T_3@7 _GEN_3@7 busy@7))
(define-fun _GEN_10@7 () Bool (or input_valid@7 _input_ready_T@7))
(define-fun _GEN_11@7 () (_ BitVec 16) (ite input_valid@7 input_bits_value1@7 x@7))
(define-fun _GEN_12@7 () (_ BitVec 16) (ite input_valid@7 input_bits_value2@7 y@7))
(define-fun _GEN_13@7 () (_ BitVec 16) (ite input_valid@7 input_bits_value1@7 xInitial@7))
(define-fun _GEN_14@7 () (_ BitVec 16) (ite input_valid@7 input_bits_value2@7 yInitial@7))
(define-fun _GEN_15@7 () Bool (or input_valid@7 busy@7))
(define-fun _GEN_18_invalid.en@7 () Bool (not busy@7))
(define-fun _GEN_19_invalid.en@7 () Bool (not busy@7))
(define-fun _GEN_20_invalid.en@7 () Bool (not busy@7))
(define-fun _GEN_21@7 () Bool (ite busy@7 _GEN_8@7 resultValid@7))
(define-fun _GEN_22@7 () Bool (ite busy@7 _GEN_9@7 _GEN_15@7))
(define-fun output_valid@7 () Bool resultValid@7)
(define-fun _T_8@7 () Bool (and _input_ready_T@7 output_valid@7))
(define-fun _T_9@7 () Bool (not _T_8@7))
(define-fun _T_11@7 () Bool (not reset@7))
(define-fun _T_12@7 () Bool (not _T_9@7))
(define-fun _resetPhase@7 () Bool (not (bvuge (ite _resetCount@7 (_ bv1 1) (_ bv0 1)) (ite true (_ bv1 1) (_ bv0 1)))))
(define-fun input_ready@7 () Bool (ite busy@7 _input_ready_T@7 _GEN_10@7))
(define-fun output_bits_value1@7 () (_ BitVec 16) (ite (not busy@7) _GEN_19_invalid@7 _GEN_6@7))
(define-fun output_bits_value2@7 () (_ BitVec 16) (ite (not busy@7) _GEN_20_invalid@7 _GEN_7@7))
(define-fun output_bits_gcd@7 () (_ BitVec 16) (ite (not busy@7) _GEN_18_invalid@7 _GEN_5@7))
(define-fun assert@7 () Bool (not (=> _T_11@7 _T_9@7)))
(define-fun _resetActive@7 () Bool (=> _resetPhase@7 reset@7))
(pop 1)
(exit)
